{"mappings":"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","sources":["dist/index.js"],"sourcesContent":["\"use strict\";\nvar Game = /** @class */ (function () {\n    function Game(canvasId) {\n        this.canvas = document.getElementById(canvasId);\n        this.context = this.canvas.getContext('2d');\n        this._pacman = new Pacman(this.canvas.width / 2, this.canvas.height / 2);\n        this.ghosts = [new Ghost(50, 50), new Ghost(100, 100)]; // Example positions\n        this.walls = this.createWalls();\n        this.dots = this.createDots();\n        this.gameLoop = 0;\n        this.dotsEaten = 0; // Initialize counter\n    }\n    Game.prototype.createWalls = function () {\n        // Define walls' positions and dimensions\n        var borderThickness = 20;\n        return [\n            new Wall(0, 0, this.canvas.width, borderThickness),\n            new Wall(0, this.canvas.height - borderThickness, this.canvas.width, borderThickness),\n            new Wall(0, 0, borderThickness, this.canvas.height),\n            new Wall(this.canvas.width - borderThickness, 0, borderThickness, this.canvas.height),\n            new Wall(100, 100, 200, 20),\n            new Wall(300, 200, 20, 200),\n            // Add more walls as needed\n        ];\n    };\n    Game.prototype.createDots = function () {\n        // Create dots for the game board\n        var dots = [];\n        for (var i = 0; i < this.canvas.width; i += 20) {\n            var _loop_1 = function (j) {\n                var dot = new Dot(i, j);\n                if (!this_1.walls.some(function (wall) { return wall.collidesWith(dot); })) {\n                    dots.push(dot);\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < this.canvas.height; j += 20) {\n                _loop_1(j);\n            }\n        }\n        return dots;\n    };\n    Game.prototype.start = function () {\n        var _this = this;\n        this.gameLoop = setInterval(function () {\n            _this.update();\n            _this.draw();\n        }, 1000 / 60);\n    };\n    Game.prototype.update = function () {\n        var _this = this;\n        this._pacman.update(this.walls);\n        this.ghosts.forEach(function (ghost) { return ghost.update(_this.walls); });\n        // Check for collisions between Pacman and dots\n        this.dots = this.dots.filter(function (dot) {\n            if (_this._pacman.collidesWith(dot)) {\n                _this.dotsEaten++; // Increment counter\n                return false;\n            }\n            return true;\n        });\n        // Handle other game logic here\n    };\n    Game.prototype.draw = function () {\n        var _this = this;\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this._pacman.draw(this.context);\n        this.ghosts.forEach(function (ghost) { return ghost.draw(_this.context); });\n        this.dots.forEach(function (dot) { return dot.draw(_this.context); });\n        this.walls.forEach(function (wall) { return wall.draw(_this.context); });\n        // Draw the dots eaten counter\n        this.context.fillStyle = 'white';\n        this.context.font = '20px Arial';\n        this.context.fillText(\"Dots Eaten: \".concat(this.dotsEaten), this.canvas.width - 150, 30);\n    };\n    Object.defineProperty(Game.prototype, \"pacman\", {\n        get: function () {\n            return this._pacman;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Game;\n}());\nvar Pacman = /** @class */ (function () {\n    function Pacman(x, y) {\n        this.x = x;\n        this.y = y;\n        this.radius = 10;\n        this.speed = 2;\n        this.direction = 'right';\n    }\n    Pacman.prototype.update = function (walls) {\n        var _this = this;\n        var nextX = this.x;\n        var nextY = this.y;\n        switch (this.direction) {\n            case 'right':\n                nextX += this.speed;\n                break;\n            case 'left':\n                nextX -= this.speed;\n                break;\n            case 'up':\n                nextY -= this.speed;\n                break;\n            case 'down':\n                nextY += this.speed;\n                break;\n        }\n        if (!walls.some(function (wall) { return wall.collidesWithCircle(nextX, nextY, _this.radius); })) {\n            this.x = nextX;\n            this.y = nextY;\n        }\n    };\n    Pacman.prototype.draw = function (context) {\n        context.beginPath();\n        context.arc(this.x, this.y, this.radius, 0.2 * Math.PI, 1.8 * Math.PI);\n        context.lineTo(this.x, this.y);\n        context.fillStyle = 'yellow';\n        context.fill();\n        context.closePath();\n    };\n    Pacman.prototype.setDirection = function (direction) {\n        this.direction = direction;\n    };\n    Pacman.prototype.collidesWith = function (dot) {\n        var distance = Math.sqrt(Math.pow((this.x - dot.x), 2) + Math.pow((this.y - dot.y), 2));\n        return distance < this.radius + dot.radius;\n    };\n    return Pacman;\n}());\nvar Ghost = /** @class */ (function () {\n    function Ghost(x, y) {\n        this.x = x;\n        this.y = y;\n        this.radius = 10;\n        this.speed = 2;\n        this.direction = this.getRandomDirection();\n        this.changeDirectionInterval = 0;\n    }\n    Ghost.prototype.getRandomDirection = function () {\n        var directions = ['right', 'left', 'up', 'down'];\n        return directions[Math.floor(Math.random() * directions.length)];\n    };\n    Ghost.prototype.update = function (walls) {\n        var _this = this;\n        var nextX = this.x;\n        var nextY = this.y;\n        switch (this.direction) {\n            case 'right':\n                nextX += this.speed;\n                break;\n            case 'left':\n                nextX -= this.speed;\n                break;\n            case 'up':\n                nextY -= this.speed;\n                break;\n            case 'down':\n                nextY += this.speed;\n                break;\n        }\n        if (!walls.some(function (wall) { return wall.collidesWithCircle(nextX, nextY, _this.radius); })) {\n            this.x = nextX;\n            this.y = nextY;\n        }\n        else {\n            this.direction = this.getRandomDirection(); // Change direction if hitting a wall\n        }\n        this.changeDirectionInterval++;\n        if (this.changeDirectionInterval > 60) { // Change direction every 1 second (assuming 60 FPS)\n            this.direction = this.getRandomDirection();\n            this.changeDirectionInterval = 0;\n        }\n    };\n    Ghost.prototype.draw = function (context) {\n        context.beginPath();\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        context.fillStyle = 'red';\n        context.fill();\n        context.closePath();\n    };\n    return Ghost;\n}());\nvar Dot = /** @class */ (function () {\n    function Dot(x, y) {\n        this.x = x;\n        this.y = y;\n        this.radius = 3;\n    }\n    Dot.prototype.draw = function (context) {\n        context.beginPath();\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        context.fillStyle = 'white';\n        context.fill();\n        context.closePath();\n    };\n    return Dot;\n}());\nvar Wall = /** @class */ (function () {\n    function Wall(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Wall.prototype.draw = function (context) {\n        context.fillStyle = 'blue';\n        context.fillRect(this.x, this.y, this.width, this.height);\n    };\n    Wall.prototype.collidesWith = function (dot) {\n        return (dot.x > this.x &&\n            dot.x < this.x + this.width &&\n            dot.y > this.y &&\n            dot.y < this.y + this.height);\n    };\n    Wall.prototype.collidesWithCircle = function (cx, cy, radius) {\n        var closestX = Math.max(this.x, Math.min(cx, this.x + this.width));\n        var closestY = Math.max(this.y, Math.min(cy, this.y + this.height));\n        var distanceX = cx - closestX;\n        var distanceY = cy - closestY;\n        return (Math.pow(distanceX, 2) + Math.pow(distanceY, 2)) < (Math.pow(radius, 2));\n    };\n    return Wall;\n}());\nwindow.onload = function () {\n    var game = new Game('gameCanvas');\n    game.start();\n    document.addEventListener('keydown', function (event) {\n        switch (event.key) {\n            case 'ArrowRight':\n                game.pacman.setDirection('right');\n                break;\n            case 'ArrowLeft':\n                game.pacman.setDirection('left');\n                break;\n            case 'ArrowUp':\n                game.pacman.setDirection('up');\n                break;\n            case 'ArrowDown':\n                game.pacman.setDirection('down');\n                break;\n        }\n    });\n};\n"],"names":[],"version":3,"file":"index.f925a820.js.map","sourceRoot":"/__parcel_source_root/"}