{"mappings":"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","sources":["dist/index.js"],"sourcesContent":["\"use strict\";\nvar Game = /** @class */ (function () {\n    function Game(canvasId) {\n        this.canvas = document.getElementById(canvasId);\n        this.context = this.canvas.getContext('2d');\n        this._pacman = new Pacman(this.canvas.width / 2, this.canvas.height / 2);\n        this.ghosts = [new Ghost(50, 50), new Ghost(100, 100)]; // Example positions\n        this.dots = this.createDots();\n        this.gameLoop = 0;\n    }\n    Game.prototype.createDots = function () {\n        // Create dots for the game board\n        var dots = [];\n        for (var i = 0; i < this.canvas.width; i += 20) {\n            for (var j = 0; j < this.canvas.height; j += 20) {\n                dots.push(new Dot(i, j));\n            }\n        }\n        return dots;\n    };\n    Game.prototype.start = function () {\n        var _this = this;\n        this.gameLoop = setInterval(function () {\n            _this.update();\n            _this.draw();\n        }, 1000 / 60);\n    };\n    Game.prototype.update = function () {\n        var _this = this;\n        this._pacman.update();\n        this.ghosts.forEach(function (ghost) { return ghost.update(); });\n        // Check for collisions between Pacman and dots\n        this.dots = this.dots.filter(function (dot) { return !_this._pacman.collidesWith(dot); });\n        // Handle other game logic here\n    };\n    Game.prototype.draw = function () {\n        var _this = this;\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this._pacman.draw(this.context);\n        this.ghosts.forEach(function (ghost) { return ghost.draw(_this.context); });\n        this.dots.forEach(function (dot) { return dot.draw(_this.context); });\n    };\n    Object.defineProperty(Game.prototype, \"pacman\", {\n        get: function () {\n            return this._pacman;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Game;\n}());\nvar Pacman = /** @class */ (function () {\n    function Pacman(x, y) {\n        this.x = x;\n        this.y = y;\n        this.radius = 10;\n        this.speed = 2;\n        this.direction = 'right';\n    }\n    Pacman.prototype.update = function () {\n        switch (this.direction) {\n            case 'right':\n                this.x += this.speed;\n                break;\n            case 'left':\n                this.x -= this.speed;\n                break;\n            case 'up':\n                this.y -= this.speed;\n                break;\n            case 'down':\n                this.y += this.speed;\n                break;\n        }\n        // Add boundary checks and collision detection here\n    };\n    Pacman.prototype.draw = function (context) {\n        context.beginPath();\n        context.arc(this.x, this.y, this.radius, 0.2 * Math.PI, 1.8 * Math.PI);\n        context.lineTo(this.x, this.y);\n        context.fillStyle = 'yellow';\n        context.fill();\n        context.closePath();\n    };\n    Pacman.prototype.setDirection = function (direction) {\n        this.direction = direction;\n    };\n    Pacman.prototype.collidesWith = function (dot) {\n        var distance = Math.sqrt(Math.pow((this.x - dot.x), 2) + Math.pow((this.y - dot.y), 2));\n        return distance < this.radius + dot.radius;\n    };\n    return Pacman;\n}());\nvar Ghost = /** @class */ (function () {\n    function Ghost(x, y) {\n        this.x = x;\n        this.y = y;\n        this.radius = 10;\n    }\n    Ghost.prototype.update = function () {\n        // Add ghost movement logic here\n    };\n    Ghost.prototype.draw = function (context) {\n        context.beginPath();\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        context.fillStyle = 'red';\n        context.fill();\n        context.closePath();\n    };\n    return Ghost;\n}());\n//\nvar Dot = /** @class */ (function () {\n    function Dot(x, y) {\n        this.x = x;\n        this.y = y;\n        this.radius = 3;\n    }\n    Dot.prototype.draw = function (context) {\n        context.beginPath();\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        context.fillStyle = 'white';\n        context.fill();\n        context.closePath();\n    };\n    return Dot;\n}());\nwindow.onload = function () {\n    var game = new Game('gameCanvas');\n    game.start();\n    document.addEventListener('keydown', function (event) {\n        switch (event.key) {\n            case 'ArrowRight':\n                game.pacman.setDirection('right');\n                break;\n            case 'ArrowLeft':\n                game.pacman.setDirection('left');\n                break;\n            case 'ArrowUp':\n                game.pacman.setDirection('up');\n                break;\n            case 'ArrowDown':\n                game.pacman.setDirection('down');\n                break;\n        }\n    });\n};\n"],"names":[],"version":3,"file":"index.f925a820.js.map","sourceRoot":"/__parcel_source_root/"}